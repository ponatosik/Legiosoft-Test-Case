// <auto-generated />
using System;
using Legiosoft_test_case.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Legiosoft_test_case.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20240805072850_AddTimeZoneAndLocalTime")]
    partial class AddTimeZoneAndLocalTime
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Legiosoft_test_case.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("IanaTimeZoneId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("LocalTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UtcTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Legiosoft_test_case.Models.Transaction", b =>
                {
                    b.OwnsOne("Legiosoft_test_case.Models.Coordinates", "ClientLocation", b1 =>
                        {
                            b1.Property<string>("TransactionId")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Latitude")
                                .HasColumnType("TEXT");

                            b1.Property<decimal>("Longitude")
                                .HasColumnType("TEXT");

                            b1.HasKey("TransactionId");

                            b1.ToTable("Transactions");

                            b1.WithOwner()
                                .HasForeignKey("TransactionId");
                        });

                    b.Navigation("ClientLocation")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
